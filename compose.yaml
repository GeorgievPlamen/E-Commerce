services:
  products-microservice:
    image: products-microservice:latest
    environment:
      - MYSQL_HOST=mysql-host-productsmicroservice
      - MYSQL_PASSWORD=admin
    ports:
      - 8080:8080
    networks:
      - ecommerce-network

  users-microservice:
    image: users-microservice:latest
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_HOST=postgres-container
    ports:
      - 9090:9090
    networks:
      - ecommerce-network

  orders-microservice:
    image: orders-microservice:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MONGO_HOST=mongodb-container
      - MONGO_PORT=27017
      - MONGO_DATABASE=OrdersDatabase
      - UsersMicroserviceName=localhost
      - UsersMicroservicePort=9090
    ports:
      - "7000:8080"
    depends_on:
      - mongo-container
      - users-microservice
    networks:
      - ecommerce-network

  mysql-container:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=admin
    ports:
      - 3306:3306
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-network
    hostname: mysql-host-productsmicroservice

  psql-container:
    image: postgres:latest
    restart: always
    user: postgres
    volumes:
      - "./postgres-init:/docker-entrypoint-initdb.d"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=eCommerceUsers
    ports:
      - "5432:5432"
    networks:
      - ecommerce-network
    hostname: postgres-container

  mongo-container:
    image: mongo:latest
    volumes:
      - "./orders-init:/docker-entrypoint-initdb.d"
    ports:
      - "27017:27017"
    networks:
      - ecommerce-network
    hostname: mongodb-container

networks:
  ecommerce-network:
    driver: bridge
